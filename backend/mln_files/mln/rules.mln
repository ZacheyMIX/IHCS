// Predicates
HasName(Employee, Name)
HasEmployeeID(Employee, ID)
HasSalary(Employee, Salary)
HasDOB(Employee, DOB)
HasJoinDate(Employee, JoinDate)
HasYearsOfService(Employee, Years)
HasWeight(Employee, Weight)
HasAddress(Employee, Address)
HasEmail(Employee, Email)
RegexMatch(String, Pattern)

BadName(Employee)
BadID(Employee)
BadSalary(Employee)
BadDOB(Employee)
BadJoinDate(Employee)
BadYearsOfService(Employee)
BadWeight(Employee)
BadAddress(Employee)
BadEmail(Employee)

SuggestFixedName(Employee, Name)
SuggestFixedID(Employee, ID)
SuggestFixedSalary(Employee, Salary)
SuggestFixedDOB(Employee, DOB)
SuggestFixedJoinDate(Employee, JoinDate)
SuggestFixedYearsOfService(Employee, Years)
SuggestFixedWeight(Employee, Weight)
SuggestFixedAddress(Employee, Address)
SuggestFixedEmail(Employee, Email)

HasCleanName(Employee, Name)
HasCleanEmployeeID(Employee, ID)
HasCleanSalary(Employee, Salary)
HasCleanDOB(Employee, DOB)
HasCleanJoinDate(Employee, JoinDate)
HasCleanYearsOfService(Employee, Years)
HasCleanWeight(Employee, Weight)
HasCleanAddress(Employee, Address)
HasCleanEmail(Employee, Email)

// Error detection rules
0.8 HasEmail(e, email), RegexMatch(email, ".*\\s+.*") => BadEmail(e)
0.8 HasEmail(e, email), !RegexMatch(email, ".*@.*") => BadEmail(e)
0.8 HasEmail(e, email), !RegexMatch(email, ".*\\.com|\\.org|\\.edu") => BadEmail(e)


// Suggest fixes (store same value for now)
BadEmail(e) , HasEmail(e, email) => SuggestFixedEmail(e, email).
BadAddress(e) , HasAddress(e, addr) => SuggestFixedAddress(e, addr).
BadSalary(e) , HasSalary(e, sal) => SuggestFixedSalary(e, sal).
BadWeight(e) , HasWeight(e, w) => SuggestFixedWeight(e, w).
BadJoinDate(e) , HasJoinDate(e, jd) => SuggestFixedJoinDate(e, jd).
BadDOB(e) , HasDOB(e, dob) => SuggestFixedDOB(e, dob).
BadID(e) , HasEmployeeID(e, id) => SuggestFixedID(e, id).
BadName(e) , HasName(e, name) => SuggestFixedName(e, name).
BadYearsOfService(e) , HasYearsOfService(e, y) => SuggestFixedYearsOfService(e, y).

// Final clean value rules
SuggestFixedEmail(e, fixed) => HasCleanEmail(e, fixed).
SuggestFixedAddress(e, fixed) => HasCleanAddress(e, fixed).
SuggestFixedSalary(e, fixed) => HasCleanSalary(e, fixed).
SuggestFixedWeight(e, fixed) => HasCleanWeight(e, fixed).
SuggestFixedJoinDate(e, fixed) => HasCleanJoinDate(e, fixed).
SuggestFixedDOB(e, fixed) => HasCleanDOB(e, fixed).
SuggestFixedID(e, fixed) => HasCleanEmployeeID(e, fixed).
SuggestFixedName(e, fixed) => HasCleanName(e, fixed).
SuggestFixedYearsOfService(e, fixed) => HasCleanYearsOfService(e, fixed).

// If no error, use original
HasEmail(e, email) , !BadEmail(e) => HasCleanEmail(e, email).
HasAddress(e, addr) , !BadAddress(e) => HasCleanAddress(e, addr).
HasSalary(e, sal) , !BadSalary(e) => HasCleanSalary(e, sal).
HasWeight(e, w) , !BadWeight(e) => HasCleanWeight(e, w).
HasJoinDate(e, jd) , !BadJoinDate(e) => HasCleanJoinDate(e, jd).
HasDOB(e, dob) , !BadDOB(e) => HasCleanDOB(e, dob).
HasEmployeeID(e, id) , !BadID(e) => HasCleanEmployeeID(e, id).
HasName(e, name) , !BadName(e) => HasCleanName(e, name).
HasYearsOfService(e, y) , !BadYearsOfService(e) => HasCleanYearsOfService(e, y).
